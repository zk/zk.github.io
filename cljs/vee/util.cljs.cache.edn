;; Analyzed by ClojureScript 0.0-3165
{:use-macros nil, :excludes #{}, :name vee.util, :imports nil, :requires {str clojure.string, clojure.string clojure.string, t cognitect.transit, cognitect.transit cognitect.transit, gstring goog.string, goog.string goog.string}, :uses nil, :defs {uuid {:protocol-inline nil, :meta {:line 52, :column 7, :end-line 52, :end-column 11, :arglists (quote ([])), :file nil}, :name vee.util/uuid, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, format-phone {:protocol-inline nil, :meta {:line 34, :column 7, :end-line 34, :end-column 19, :arglists (quote ([phone])), :file nil}, :name vee.util/format-phone, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 19, :method-params ([phone]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}}), :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([phone])), :test true}, from-transit {:protocol-inline nil, :meta {:line 12, :column 7, :end-line 12, :end-column 19, :arglists (quote ([s])), :file nil}, :name vee.util/from-transit, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, timeago {:protocol-inline nil, :meta {:line 82, :column 7, :end-line 82, :end-column 14, :arglists (quote ([millis])), :file nil}, :name vee.util/timeago, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 14, :method-params ([millis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any string clj-nil}}), :line 82, :end-line 82, :max-fixed-arity 1, :fn-var true, :arglists (quote ([millis])), :test true}, initials {:protocol-inline nil, :meta {:line 68, :column 7, :end-line 68, :end-column 15, :arglists (quote ([s])), :file nil}, :name vee.util/initials, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 15, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}}), :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, now {:protocol-inline nil, :meta {:line 31, :column 7, :end-line 31, :end-column 10, :arglists (quote ([])), :file nil}, :name vee.util/now, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 31, :end-line 31, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, to-transit {:protocol-inline nil, :meta {:line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([o])), :file nil}, :name vee.util/to-transit, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 17, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, to-json {:protocol-inline nil, :meta {:line 15, :column 7, :end-line 15, :end-column 14, :arglists (quote ([o])), :file nil}, :name vee.util/to-json, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 14, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, ellipsis {:protocol-inline nil, :meta {:line 21, :column 7, :end-line 21, :end-column 15, :arglists (quote ([n s])), :file nil}, :name vee.util/ellipsis, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 15, :method-params ([n s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag #{nil any clj-nil}}), :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n s])), :test true}, from-json {:protocol-inline nil, :meta {:line 18, :column 7, :end-line 18, :end-column 16, :arglists (quote ([o])), :file nil}, :name vee.util/from-json, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{nil clj any cljs.core/MetaFn clj-nil}}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, exact-timeago {:protocol-inline nil, :meta {:line 100, :column 7, :end-line 100, :end-column 20, :arglists (quote ([millis])), :file nil}, :name vee.util/exact-timeago, :variadic false, :file "static/cljs/vee/util.cljs", :end-column 20, :method-params ([millis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any string clj-nil}}), :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([millis])), :test true}, writer {:name vee.util/writer, :line 7, :column 1, :end-line 7, :end-column 12, :test true, :meta {:line 7, :column 6, :end-line 7, :end-column 12, :file nil}, :file "static/cljs/vee/util.cljs"}, reader {:name vee.util/reader, :line 6, :column 1, :end-line 6, :end-column 12, :test true, :meta {:line 6, :column 6, :end-line 6, :end-column 12, :file nil}, :file "static/cljs/vee/util.cljs"}, sformat {:protocol-inline nil, :meta {:line 79, :column 7, :end-line 79, :end-column 14, :arglists (quote ([& args])), :file nil}, :name vee.util/sformat, :variadic true, :file "static/cljs/vee/util.cljs", :end-column 14, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic true, :tag any}), :line 79, :end-line 79, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& args])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :json :keywordize-keys}, :order [:json :keywordize-keys :else]}, :doc nil}