;; Analyzed by ClojureScript 0.0-3165
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client.heads-up, :imports nil, :requires {string clojure.string, clojure.string clojure.string, socket figwheel.client.socket, figwheel.client.socket figwheel.client.socket, async cljs.core.async, cljs.core.async cljs.core.async, goog.string goog.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, map< cljs.core.async, put! cljs.core.async}, :defs {get-content {:protocol-inline nil, :meta {:line 85, :column 7, :end-line 85, :end-column 18, :arglists (quote ([{:keys [content-area-el]}])), :file nil}, :name figwheel.client.heads-up/get-content, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([p__28476]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [content-area-el]}])), :test true}, file-and-line-number {:protocol-inline nil, :meta {:line 125, :column 7, :end-line 125, :end-column 27, :arglists (quote ([msg])), :file nil}, :name figwheel.client.heads-up/file-and-line-number, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{cljs.core/LazySeq clj-nil}}), :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, set-style! {:protocol-inline nil, :meta {:line 76, :column 7, :end-line 76, :end-column 17, :arglists (quote ([{:keys [container-el]} st-map])), :file nil}, :name figwheel.client.heads-up/set-style!, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([p__28466 st-map]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag clj}), :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [container-el]} st-map])), :test true}, heading {:protocol-inline nil, :meta {:line 116, :column 7, :end-line 116, :end-column 14, :arglists (quote ([s])), :file nil}, :name figwheel.client.heads-up/heading, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 14, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, clear {:protocol-inline nil, :meta {:line 172, :column 7, :end-line 172, :end-column 12, :arglists (quote ([])), :file nil}, :name figwheel.client.heads-up/clear, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 172, :end-line 172, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, get-dataset {:protocol-inline nil, :meta {:line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([el])), :file nil}, :name figwheel.client.heads-up/get-dataset, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}}), :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el])), :test true}, display-heads-up {:protocol-inline nil, :meta {:line 101, :column 7, :end-line 101, :end-column 23, :arglists (quote ([style msg])), :file nil}, :name figwheel.client.heads-up/display-heads-up, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([style msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 101, :end-line 101, :max-fixed-arity 2, :fn-var true, :arglists (quote ([style msg])), :test true}, display-error {:protocol-inline nil, :meta {:line 140, :column 7, :end-line 140, :end-column 20, :arglists (quote ([formatted-messages cause])), :file nil}, :name figwheel.client.heads-up/display-error, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 20, :method-params ([formatted-messages cause]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 140, :end-line 140, :max-fixed-arity 2, :fn-var true, :arglists (quote ([formatted-messages cause])), :test true}, format-line {:protocol-inline nil, :meta {:line 134, :column 7, :end-line 134, :end-column 18, :arglists (quote ([msg])), :file nil}, :name figwheel.client.heads-up/format-line, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 18, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, heads-up-event-dispatch {:name figwheel.client.heads-up/heads-up-event-dispatch, :line 19, :column 1, :end-line 19, :end-column 34, :test true, :meta {:line 19, :column 11, :end-line 19, :end-column 34, :file nil}, :file "static/cljs/figwheel/client/heads_up.cljs"}, heads-up-onclick-handler {:protocol-inline nil, :meta {:line 36, :column 7, :end-line 36, :end-column 31, :arglists (quote ([event])), :file nil}, :name figwheel.client.heads-up/heads-up-onclick-handler, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 31, :method-params ([event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}}), :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([event])), :test true}, append-message {:protocol-inline nil, :meta {:line 166, :column 7, :end-line 166, :end-column 21, :arglists (quote ([message])), :file nil}, :name figwheel.client.heads-up/append-message, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message])), :test true}, set-content! {:protocol-inline nil, :meta {:line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([{:keys [content-area-el], :as c} dom-str])), :file nil}, :name figwheel.client.heads-up/set-content!, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([p__28473 dom-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false}), :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [content-area-el], :as c} dom-str])), :test true}, display-warning {:protocol-inline nil, :meta {:line 163, :column 7, :end-line 163, :end-column 22, :arglists (quote ([msg])), :file nil}, :name figwheel.client.heads-up/display-warning, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 22, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :test true}, file-selector-div {:protocol-inline nil, :meta {:line 129, :column 7, :end-line 129, :end-column 24, :arglists (quote ([file-name line-number msg])), :file nil}, :name figwheel.client.heads-up/file-selector-div, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 24, :method-params ([file-name line-number msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 3, :variadic false, :tag any}), :line 129, :end-line 129, :max-fixed-arity 3, :fn-var true, :arglists (quote ([file-name line-number msg])), :test true}, display-loaded-start {:protocol-inline nil, :meta {:line 186, :column 7, :end-line 186, :end-column 27, :arglists (quote ([])), :file nil}, :name figwheel.client.heads-up/display-loaded-start, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 186, :end-line 186, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ensure-container {:protocol-inline nil, :meta {:line 42, :column 7, :end-line 42, :end-column 23, :arglists (quote ([])), :file nil}, :name figwheel.client.heads-up/ensure-container, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag cljs.core/IMap}), :line 42, :end-line 42, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, clojure-symbol-svg {:name figwheel.client.heads-up/clojure-symbol-svg, :line 200, :column 1, :end-line 200, :end-column 24, :test true, :meta {:line 200, :column 6, :end-line 200, :end-column 24, :file nil}, :file "static/cljs/figwheel/client/heads_up.cljs"}, node {:protocol-inline nil, :meta {:line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([t attrs & children])), :file nil}, :name figwheel.client.heads-up/node, :variadic true, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 11, :method-params ([t attrs children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic true, :tag any}), :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t attrs & children])), :test true}, display-system-warning {:protocol-inline nil, :meta {:line 158, :column 7, :end-line 158, :end-column 29, :arglists (quote ([header msg])), :file nil}, :name figwheel.client.heads-up/display-system-warning, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 29, :method-params ([header msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([header msg])), :test true}, close-link {:protocol-inline nil, :meta {:line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([])), :file nil}, :name figwheel.client.heads-up/close-link, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 88, :end-line 88, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ancestor-nodes {:protocol-inline nil, :meta {:line 29, :column 7, :end-line 29, :end-column 21, :arglists (quote ([el])), :file nil}, :name figwheel.client.heads-up/ancestor-nodes, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 21, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag cljs.core/Cons}), :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el])), :test true}, flash-loaded {:protocol-inline nil, :meta {:line 194, :column 7, :end-line 194, :end-column 19, :arglists (quote ([])), :file nil}, :name figwheel.client.heads-up/flash-loaded, :variadic false, :file "static/cljs/figwheel/client/heads_up.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 194, :end-line 194, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:figwheel-event :content-area-el :borderRadius :else :paddingBottom :paddingTop :default :paddingRight :file :width :recur :paddingLeft :container-el :column :style :div :line :opacity :id :padding :file-name :hierarchy :backgroundColor :minHeight :file-line :height}, :order [:hierarchy :default :figwheel-event :file-name :file-line :div :id :style :container-el :content-area-el :paddingTop :paddingBottom :width :minHeight :opacity :height :recur :else :file :line :column :backgroundColor :padding :borderRadius :paddingLeft :paddingRight]}, :doc nil}