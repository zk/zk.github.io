;; Analyzed by ClojureScript 0.0-3165
{:use-macros nil, :excludes #{}, :name figwheel.client.utils, :imports {}, :requires {string clojure.string, clojure.string clojure.string}, :uses nil, :defs {*print-debug* {:name figwheel.client.utils/*print-debug*, :line 7, :column 1, :end-line 7, :end-column 29, :dynamic true, :test true, :meta {:line 7, :column 16, :end-line 7, :end-column 29, :dynamic true, :file nil}, :file "static/cljs/figwheel/client/utils.cljs"}, html-env? {:protocol-inline nil, :meta {:line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([])), :file nil}, :name figwheel.client.utils/html-env?, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, node-env? {:protocol-inline nil, :meta {:line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([])), :file nil}, :name figwheel.client.utils/node-env?, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag boolean}), :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, base-url-path {:protocol-inline nil, :meta {:line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([])), :file nil}, :name figwheel.client.utils/base-url-path, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, host-env? {:protocol-inline nil, :meta {:line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([])), :file nil}, :name figwheel.client.utils/host-env?, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag cljs.core/Keyword}), :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, dispatch-custom-event {:protocol-inline nil, :meta {:line 20, :column 7, :end-line 20, :end-column 28, :arglists (quote ([event-name data])), :file nil}, :name figwheel.client.utils/dispatch-custom-event, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 28, :method-params ([event-name data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag #{any clj-nil}}), :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([event-name data])), :test true}, debug-prn {:protocol-inline nil, :meta {:line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([o])), :file nil}, :name figwheel.client.utils/debug-prn, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 16, :method-params ([o]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}}), :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([o])), :test true}, log {:protocol-inline nil, :meta {:line 34, :column 7, :end-line 34, :end-column 10, :arglists (quote ([x] [level arg])), :file nil}, :name figwheel.client.utils/log, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 10, :method-params ([x] [level arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any} {:max-fixed-arity 2, :variadic false, :tag any}), :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x] [level arg])), :test true}, eval-helper {:protocol-inline nil, :meta {:line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([code {:keys [eval-fn], :as opts}])), :file nil}, :name figwheel.client.utils/eval-helper, :variadic false, :file "static/cljs/figwheel/client/utils.cljs", :end-column 18, :method-params ([code p__24103]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag any}), :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([code {:keys [eval-fn], :as opts}])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:else :warn :debug :node :info :error :eval-fn :html}, :order [:node :else :html :info :warn :debug :error :eval-fn]}, :doc nil}