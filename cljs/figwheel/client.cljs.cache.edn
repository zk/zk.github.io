;; Analyzed by ClojureScript 0.0-3165
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name figwheel.client, :imports {}, :requires {guri goog.Uri, async cljs.core.async, goog.Uri goog.Uri, cljs.core.async cljs.core.async, socket figwheel.client.socket, figwheel.client.file-reloading figwheel.client.file-reloading, reloading figwheel.client.file-reloading, string clojure.string, figwheel.client.utils figwheel.client.utils, cljs.repl cljs.repl, utils figwheel.client.utils, figwheel.client.heads-up figwheel.client.heads-up, figwheel.client.socket figwheel.client.socket, heads-up figwheel.client.heads-up, clojure.string clojure.string}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, alts! cljs.core.async, map< cljs.core.async, put! cljs.core.async}, :defs {focus-msgs {:protocol-inline nil, :meta {:line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([name-set msg-hist])), :file nil}, :name figwheel.client/focus-msgs, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 17, :method-params ([name-set msg-hist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag cljs.core/Cons}), :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name-set msg-hist])), :test true}, handle-deprecated-jsload-callback {:protocol-inline nil, :meta {:line 278, :column 7, :end-line 278, :end-column 40, :arglists (quote ([config])), :file nil}, :name figwheel.client/handle-deprecated-jsload-callback, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 40, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{nil clj clj-nil}}), :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config])), :test true}, default-on-compile-fail {:protocol-inline nil, :meta {:line 229, :column 7, :end-line 229, :end-column 30, :arglists (quote ([{:keys [formatted-exception exception-data cause], :as ed}])), :file nil}, :name figwheel.client/default-on-compile-fail, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 30, :method-params ([p__28216]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{nil any}}), :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [formatted-exception exception-data cause], :as ed}])), :test true}, reload-file?* {:protocol-inline nil, :meta {:line 50, :column 7, :end-line 50, :end-column 20, :arglists (quote ([msg-name opts])), :file nil}, :name figwheel.client/reload-file?*, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 20, :method-params ([msg-name opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag #{boolean any}}), :line 50, :end-line 50, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-name opts])), :test true}, __figwheel-start-once__ {:name figwheel.client/__figwheel-start-once__, :line 315, :column 8, :end-line 315, :end-column 40, :test true, :meta {:line 315, :column 17, :end-line 315, :end-column 40, :file nil}, :file "static/cljs/figwheel/client.cljs"}, error-msg-format {:protocol-inline nil, :meta {:line 41, :column 7, :end-line 41, :end-column 23, :arglists (quote ([{:keys [message class]}])), :file nil}, :name figwheel.client/error-msg-format, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 23, :method-params ([p__27648]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message class]}])), :test true}, compile-fail-warning-plugin {:protocol-inline nil, :meta {:line 155, :column 7, :end-line 155, :end-column 34, :arglists (quote ([{:keys [on-compile-warning on-compile-fail]}])), :file nil}, :name figwheel.client/compile-fail-warning-plugin, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 34, :method-params ([p__27822]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag function}), :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [on-compile-warning on-compile-fail]}])), :test true}, console-print {:protocol-inline nil, :meta {:line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([args])), :file nil}, :name figwheel.client/console-print, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 20, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false}), :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args])), :test true}, add-plugins {:protocol-inline nil, :meta {:line 305, :column 7, :end-line 305, :end-column 18, :arglists (quote ([plugins system-options])), :file nil}, :name figwheel.client/add-plugins, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 18, :method-params ([plugins system-options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag clj-nil}), :line 305, :end-line 305, :max-fixed-arity 2, :fn-var true, :arglists (quote ([plugins system-options])), :test true}, figwheel-repl-print {:protocol-inline nil, :meta {:line 18, :column 7, :end-line 18, :end-column 26, :arglists (quote ([args])), :file nil}, :name figwheel.client/figwheel-repl-print, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 26, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false}), :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args])), :test true}, file-reloader-plugin {:protocol-inline nil, :meta {:line 80, :column 7, :end-line 80, :end-column 27, :arglists (quote ([opts])), :file nil}, :name figwheel.client/file-reloader-plugin, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 27, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag function}), :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts])), :test true}, heads-up-plugin-msg-handler {:protocol-inline nil, :meta {:line 163, :column 7, :end-line 163, :end-column 34, :arglists (quote ([opts msg-hist'])), :file nil}, :name figwheel.client/heads-up-plugin-msg-handler, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 34, :method-params ([opts msg-hist']), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag cljs.core.async.impl.channels/ManyToManyChannel}), :line 163, :end-line 163, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts msg-hist'])), :test true}, watch-and-reload-with-opts {:name figwheel.client/watch-and-reload-with-opts, :line 333, :column 1, :end-line 333, :end-column 32, :test true, :meta {:line 333, :column 6, :end-line 333, :end-column 32, :file nil}, :file "static/cljs/figwheel/client.cljs"}, compile-fail-state? {:protocol-inline nil, :meta {:line 71, :column 7, :end-line 71, :end-column 26, :arglists (quote ([msg-names])), :file nil}, :name figwheel.client/compile-fail-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 26, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag boolean}), :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names])), :test true}, format-messages {:name figwheel.client/format-messages, :line 43, :column 1, :end-line 43, :end-column 21, :test true, :meta {:line 43, :column 6, :end-line 43, :end-column 21, :file nil}, :file "static/cljs/figwheel/client.cljs"}, css-reloader-plugin {:protocol-inline nil, :meta {:line 150, :column 7, :end-line 150, :end-column 26, :arglists (quote ([opts])), :file nil}, :name figwheel.client/css-reloader-plugin, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 26, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag function}), :line 150, :end-line 150, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts])), :test true}, ensure-cljs-user {:protocol-inline nil, :meta {:line 133, :column 7, :end-line 133, :end-column 23, :arglists (quote ([])), :doc "The REPL can disconnect and reconnect lets ensure cljs.user exists at least.", :file nil}, :name figwheel.client/ensure-cljs-user, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag #{nil clj-nil}}), :line 133, :end-line 133, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "The REPL can disconnect and reconnect lets ensure cljs.user exists at least.", :test true}, watch-and-reload {:protocol-inline nil, :meta {:line 334, :column 7, :end-line 334, :end-column 23, :arglists (quote ([& {:keys [], :as opts}])), :file nil}, :name figwheel.client/watch-and-reload, :variadic true, :file "static/cljs/figwheel/client.cljs", :end-column 23, :method-params ([p__28277]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic true, :tag #{any clj-nil}}), :line 334, :end-line 334, :max-fixed-arity 0, :fn-var true, :arglists (quote ([& {:keys [], :as opts}])), :test true}, start {:protocol-inline nil, :meta {:line 312, :column 7, :end-line 312, :end-column 12, :arglists (quote ([opts] [])), :file nil}, :name figwheel.client/start, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 12, :method-params ([opts] []), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}} {:max-fixed-arity 0, :variadic false, :tag #{any clj-nil}}), :line 312, :end-line 312, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts] [])), :test true}, repl-plugin {:protocol-inline nil, :meta {:line 140, :column 7, :end-line 140, :end-column 18, :arglists (quote ([{:keys [build-id], :as opts}])), :file nil}, :name figwheel.client/repl-plugin, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 18, :method-params ([p__27807]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag function}), :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [build-id], :as opts}])), :test true}, eval-javascript** {:protocol-inline nil, :meta {:line 111, :column 9, :end-line 111, :end-column 26, :arglists (quote ([code opts result-handler])), :file nil}, :name figwheel.client/eval-javascript**, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 26, :method-params ([code opts result-handler]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :methods ({:max-fixed-arity 3, :variadic false}), :line 111, :end-line 111, :max-fixed-arity 3, :fn-var true, :arglists (quote ([code opts result-handler])), :test true}, heads-up-plugin {:protocol-inline nil, :meta {:line 196, :column 7, :end-line 196, :end-column 22, :arglists (quote ([opts])), :file nil}, :name figwheel.client/heads-up-plugin, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 22, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag function}), :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts])), :test true}, css-loaded-state? {:protocol-inline nil, :meta {:line 77, :column 7, :end-line 77, :end-column 24, :arglists (quote ([msg-names])), :file nil}, :name figwheel.client/css-loaded-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 24, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag boolean}), :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names])), :test true}, heads-up-config-options** {:name figwheel.client/heads-up-config-options**, :line 198, :column 5, :end-line 198, :end-column 35, :test true, :meta {:line 198, :column 10, :end-line 198, :end-column 35, :file nil}, :file "static/cljs/figwheel/client.cljs"}, block-reload-file-state? {:protocol-inline nil, :meta {:line 58, :column 7, :end-line 58, :end-column 31, :arglists (quote ([msg-names opts])), :file nil}, :name figwheel.client/block-reload-file-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 31, :method-params ([msg-names opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag boolean}), :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-names opts])), :test true}, rewarning-state? {:protocol-inline nil, :meta {:line 68, :column 7, :end-line 68, :end-column 23, :arglists (quote ([msg-names])), :file nil}, :name figwheel.client/rewarning-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 23, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag boolean}), :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names])), :test true}, get-essential-messages {:protocol-inline nil, :meta {:line 36, :column 7, :end-line 36, :end-column 29, :arglists (quote ([ed])), :file nil}, :name figwheel.client/get-essential-messages, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 29, :method-params ([ed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{cljs.core/Cons clj-nil}}), :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ed])), :test true}, default-on-jsload {:name figwheel.client/default-on-jsload, :line 227, :column 1, :end-line 227, :end-column 23, :test true, :meta {:line 227, :column 6, :end-line 227, :end-column 23, :file nil}, :file "static/cljs/figwheel/client.cljs"}, base-plugins {:protocol-inline nil, :meta {:line 285, :column 7, :end-line 285, :end-column 19, :arglists (quote ([system-options])), :file nil}, :name figwheel.client/base-plugins, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 19, :method-params ([system-options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{clj cljs.core/MetaFn cljs.core/IMap clj-nil}}), :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([system-options])), :test true}, default-on-cssload {:protocol-inline nil, :meta {:line 245, :column 7, :end-line 245, :end-column 25, :arglists (quote ([files])), :file nil}, :name figwheel.client/default-on-cssload, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 25, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false}), :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files])), :test true}, enforce-project-plugin {:protocol-inline nil, :meta {:line 206, :column 7, :end-line 206, :end-column 29, :arglists (quote ([opts])), :file nil}, :name figwheel.client/enforce-project-plugin, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 29, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag function}), :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts])), :test true}, warning-append-state? {:protocol-inline nil, :meta {:line 62, :column 7, :end-line 62, :end-column 28, :arglists (quote ([msg-names])), :file nil}, :name figwheel.client/warning-append-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 28, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag boolean}), :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names])), :test true}, config-defaults {:name figwheel.client/config-defaults, :line 250, :column 1, :end-line 250, :end-column 25, :test true, :meta {:line 250, :column 10, :end-line 250, :end-column 25, :file nil}, :file "static/cljs/figwheel/client.cljs"}, compile-refail-state? {:protocol-inline nil, :meta {:line 74, :column 7, :end-line 74, :end-column 28, :arglists (quote ([msg-names])), :file nil}, :name figwheel.client/compile-refail-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 28, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag boolean}), :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names])), :test true}, reload-file-state? {:protocol-inline nil, :meta {:line 54, :column 7, :end-line 54, :end-column 25, :arglists (quote ([msg-names opts])), :file nil}, :name figwheel.client/reload-file-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 25, :method-params ([msg-names opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag #{boolean any}}), :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg-names opts])), :test true}, default-on-compile-warning {:protocol-inline nil, :meta {:line 237, :column 7, :end-line 237, :end-column 33, :arglists (quote ([{:keys [message], :as w}])), :file nil}, :name figwheel.client/default-on-compile-warning, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 33, :method-params ([p__28248]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{nil any}}), :line 237, :end-line 237, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [message], :as w}])), :test true}, warning-state? {:protocol-inline nil, :meta {:line 65, :column 7, :end-line 65, :end-column 21, :arglists (quote ([msg-names])), :file nil}, :name figwheel.client/warning-state?, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 21, :method-params ([msg-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag boolean}), :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg-names])), :test true}, default-before-load {:protocol-inline nil, :meta {:line 241, :column 7, :end-line 241, :end-column 26, :arglists (quote ([files])), :file nil}, :name figwheel.client/default-before-load, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 26, :method-params ([files]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false}), :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([files])), :test true}, enable-repl-print! {:protocol-inline nil, :meta {:line 28, :column 7, :end-line 28, :end-column 25, :arglists (quote ([])), :file nil}, :name figwheel.client/enable-repl-print!, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false}), :line 28, :end-line 28, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, truncate-stack-trace {:protocol-inline nil, :meta {:line 106, :column 7, :end-line 106, :end-column 27, :arglists (quote ([stack-str])), :file nil}, :name figwheel.client/truncate-stack-trace, :variadic false, :file "static/cljs/figwheel/client.cljs", :end-column 27, :method-params ([stack-str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag cljs.core/LazySeq}), :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([stack-str])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs.repl cljs.repl}, :cljs.analyzer/constants {:seen #{:figwheel-event :load-unchanged-files :file-reloader-plugin :cause :on-compile-warning :else :on-jsload :compile-failed :comp-fail-warning-plugin :content :css-reloader-plugin :warn :value :callback-name :file :on-compile-fail :recur :compile-warning :debug :heads-up-display-plugin :files-changed :repl-plugin :heads-up-display :merge-plugins :jsload-callback :column :build-id :css-files-changed :success :line :enforce-project-plugin :status :base-path :class :plugins :info :code :files :websocket-url :stacktrace :before-jsload :exception :msg-name :load-warninged-code :repl-eval :exception-data :eval-fn :project-id :retry-count :autoload :formatted-exception :url-rewriter :on-cssload :message}, :order [:figwheel-event :callback-name :content :message :class :cause :msg-name :load-warninged-code :compile-warning :files-changed :compile-failed :css-files-changed :recur :files :file :else :status :value :stacktrace :base-path :exception :success :build-id :repl-eval :code :on-compile-warning :on-compile-fail :exception-data :autoload :project-id :heads-up-display :formatted-exception :debug :info :line :column :warn :load-unchanged-files :on-jsload :websocket-url :before-jsload :eval-fn :retry-count :url-rewriter :on-cssload :jsload-callback :enforce-project-plugin :file-reloader-plugin :comp-fail-warning-plugin :css-reloader-plugin :repl-plugin :heads-up-display-plugin :plugins :merge-plugins]}, :doc nil}