;; Analyzed by ClojureScript 0.0-3165
{:name cljs.core.async.impl.timers, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {impl cljs.core.async.impl.protocols, cljs.core.async.impl.protocols cljs.core.async.impl.protocols, channels cljs.core.async.impl.channels, cljs.core.async.impl.channels cljs.core.async.impl.channels, dispatch cljs.core.async.impl.dispatch, cljs.core.async.impl.dispatch cljs.core.async.impl.dispatch}, :imports nil, :defs {->SkipListNode {:protocol-inline nil, :meta {:line 25, :column 10, :end-line 25, :end-column 22, :protocols #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([key val forward])), :file nil}, :protocols #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/->SkipListNode, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 22, :method-params ([key val forward]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 3, :variadic false, :tag cljs.core.async.impl.timers/SkipListNode}), :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([key val forward])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :test true}, timeout {:protocol-inline nil, :meta {:line 152, :column 7, :end-line 152, :end-column 14, :arglists (quote ([msecs])), :doc "returns a channel that will close after msecs", :file nil}, :name cljs.core.async.impl.timers/timeout, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 14, :method-params ([msecs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{any clj-nil}}), :line 152, :end-line 152, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msecs])), :doc "returns a channel that will close after msecs", :test true}, random-level {:protocol-inline nil, :meta {:line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([] [level])), :file nil}, :name cljs.core.async.impl.timers/random-level, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 19, :method-params ([] [level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any} {:max-fixed-arity 1, :variadic false}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([] [level])), :test true}, SkipList {:num-fields 2, :protocols #{cljs.core.async.impl.timers/Object cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/SkipList, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 18, :type true, :column 10, :line 59, :record false, :end-line 59, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}}, skip-list {:protocol-inline nil, :meta {:line 145, :column 7, :end-line 145, :end-column 16, :arglists (quote ([])), :file nil}, :name cljs.core.async.impl.timers/skip-list, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag cljs.core.async.impl.timers/SkipList}), :line 145, :end-line 145, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, ->SkipList {:protocol-inline nil, :meta {:line 59, :column 10, :end-line 59, :end-column 18, :protocols #{cljs.core.async.impl.timers/Object cljs.core/ISeqable cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([header level])), :file nil}, :protocols #{cljs.core.async.impl.timers/Object cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/->SkipList, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 18, :method-params ([header level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 2, :variadic false, :tag cljs.core.async.impl.timers/SkipList}), :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([header level])), :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :test true}, MAX_LEVEL {:name cljs.core.async.impl.timers/MAX_LEVEL, :line 14, :column 1, :end-line 14, :end-column 15, :test true, :meta {:line 14, :column 6, :end-line 14, :end-column 15, :file nil}, :file "static/cljs/cljs/core/async/impl/timers.cljs"}, P {:name cljs.core.async.impl.timers/P, :line 15, :column 1, :end-line 15, :end-column 7, :test true, :meta {:line 15, :column 6, :end-line 15, :end-column 7, :file nil}, :file "static/cljs/cljs/core/async/impl/timers.cljs"}, timeouts-map {:name cljs.core.async.impl.timers/timeouts-map, :line 148, :column 1, :end-line 148, :end-column 18, :test true, :meta {:line 148, :column 6, :end-line 148, :end-column 18, :file nil}, :file "static/cljs/cljs/core/async/impl/timers.cljs"}, SkipListNode {:num-fields 3, :protocols #{cljs.core/ISeqable cljs.core/IPrintWithWriter}, :name cljs.core.async.impl.timers/SkipListNode, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 22, :type true, :column 10, :line 25, :record false, :end-line 25, :skip-protocol-flag #{cljs.core/ISeqable cljs.core/IPrintWithWriter}}, skip-list-node {:protocol-inline nil, :meta {:line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([level] [k v level])), :file nil}, :name cljs.core.async.impl.timers/skip-list-node, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 21, :method-params ([level] [k v level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag cljs.core.async.impl.timers/SkipListNode} {:max-fixed-arity 3, :variadic false, :tag cljs.core.async.impl.timers/SkipListNode}), :line 34, :end-line 34, :max-fixed-arity 3, :fn-var true, :arglists (quote ([level] [k v level])), :test true}, least-greater-node {:protocol-inline nil, :meta {:line 44, :column 7, :end-line 44, :end-column 25, :arglists (quote ([x k level] [x k level update])), :file nil}, :name cljs.core.async.impl.timers/least-greater-node, :variadic false, :file "static/cljs/cljs/core/async/impl/timers.cljs", :end-column 25, :method-params ([x k level] [x k level update]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 3, :variadic false, :tag any} {:max-fixed-arity 4, :variadic false}), :line 44, :end-line 44, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x k level] [x k level update])), :test true}, TIMEOUT_RESOLUTION_MS {:name cljs.core.async.impl.timers/TIMEOUT_RESOLUTION_MS, :line 150, :column 1, :end-line 150, :end-column 27, :test true, :meta {:line 150, :column 6, :end-line 150, :end-column 27, :file nil}, :file "static/cljs/cljs/core/async/impl/timers.cljs"}}}