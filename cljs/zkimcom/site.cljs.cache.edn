;; Analyzed by ClojureScript 0.0-3165
{:name zkimcom.site, :doc nil, :excludes #{}, :use-macros {sel1 dommy.core, go cljs.core.async.macros, go-loop cljs.core.async.macros}, :require-macros {cljs.core.async.macros cljs.core.async.macros, dommy.core dommy.core}, :uses {timeout cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, tap cljs.core.async, pipe cljs.core.async, sliding-buffer cljs.core.async, >! cljs.core.async, alts! cljs.core.async, mult cljs.core.async, put! cljs.core.async, take! cljs.core.async}, :requires {ops vee.ops, vee.ops vee.ops, dommy.core dommy.core, str clojure.string, clojure.string clojure.string, reagent reagent.core, reagent.core reagent.core, async cljs.core.async, cljs.core.async cljs.core.async}, :imports nil, :defs {reload-hook {:protocol-inline nil, :meta {:line 13, :column 7, :end-line 13, :end-column 18, :arglists (quote ([])), :file nil}, :name zkimcom.site/reload-hook, :variadic false, :file "src/cljs/zkimcom/site.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag clj-nil}), :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}}}