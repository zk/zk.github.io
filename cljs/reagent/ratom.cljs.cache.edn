;; Analyzed by ClojureScript 0.0-3165
{:use-macros {log reagent.debug, dbg reagent.debug, warn reagent.debug, dev? reagent.debug}, :excludes #{atom}, :name reagent.ratom, :imports nil, :requires {util reagent.impl.util, reagent.impl.util reagent.impl.util}, :uses nil, :defs {->RCursor {:protocol-inline nil, :meta {:line 103, :column 10, :end-line 103, :end-column 17, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([ratom path reaction])), :file nil}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/->RCursor, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 17, :method-params ([ratom path reaction]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 3, :variadic false, :tag reagent.ratom/RCursor}), :line 103, :end-line 103, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ratom path reaction])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, notify-deref-watcher! {:protocol-inline nil, :meta {:line 24, :column 8, :end-line 24, :end-column 29, :private true, :arglists (quote ([derefable])), :file nil}, :private true, :name reagent.ratom/notify-deref-watcher!, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 29, :method-params ([derefable]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag #{nil clj-nil}}), :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([derefable])), :test true}, IComputedImpl {:meta {:line 194, :column 14, :end-line 194, :end-column 27, :doc nil, :protocol-symbol true, :protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]], -peek-at [[this]]}}, :file nil}, :protocol-symbol true, :name reagent.ratom/IComputedImpl, :file "static/cljs/reagent/ratom.cljs", :end-column 27, :column 1, :line 194, :protocol-info {:methods {-update-watching [[this derefed]], -handle-change [[k sender oldval newval]], -peek-at [[this]]}}, :info nil, :end-line 194, :impls #{reagent.ratom/Reaction}, :doc nil, :test true}, capture-derefed {:protocol-inline nil, :meta {:line 14, :column 7, :end-line 14, :end-column 22, :arglists (quote ([f obj])), :file nil}, :name reagent.ratom/capture-derefed, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 22, :method-params ([f obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false}), :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f obj])), :test true}, RAtom {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/RAtom, :file "static/cljs/reagent/ratom.cljs", :end-column 15, :type true, :column 10, :line 37, :record false, :end-line 37, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}}, atom {:protocol-inline nil, :meta {:line 92, :column 7, :end-line 92, :end-column 11, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :file nil}, :name reagent.ratom/atom, :variadic true, :file "static/cljs/reagent/ratom.cljs", :end-column 11, :method-params ([x] [x p__19104]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag reagent.ratom/RAtom} {:max-fixed-arity 1, :variadic true, :tag reagent.ratom/RAtom}), :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x] [x & {:keys [meta validator]}])), :doc "Like clojure.core/atom, except that it keeps track of derefs.", :test true}, ->Reaction {:protocol-inline nil, :meta {:line 199, :column 10, :end-line 199, :end-column 18, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose])), :file nil}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Reaction, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 18, :method-params ([f state dirty? active? watching watches auto-run on-set on-dispose]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 9, :variadic false, :tag reagent.ratom/Reaction}), :line 199, :end-line 199, :max-fixed-arity 9, :fn-var true, :arglists (quote ([f state dirty? active? watching watches auto-run on-set on-dispose])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, make-wrapper {:protocol-inline nil, :meta {:line 394, :column 7, :end-line 394, :end-column 19, :arglists (quote ([value callback-fn args])), :file nil}, :name reagent.ratom/make-wrapper, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 19, :method-params ([value callback-fn args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 3, :variadic false, :tag reagent.ratom/Wrapper}), :line 394, :end-line 394, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value callback-fn args])), :test true}, IReactiveAtom {:meta {:line 35, :column 14, :end-line 35, :end-column 27, :doc nil, :protocol-symbol true, :protocol-info {:methods {}}, :file nil}, :protocol-symbol true, :name reagent.ratom/IReactiveAtom, :file "static/cljs/reagent/ratom.cljs", :end-column 27, :column 1, :line 35, :protocol-info {:methods {}}, :info nil, :end-line 35, :impls #{reagent.ratom/RCursor reagent.ratom/Reaction reagent.ratom/RAtom}, :doc nil, :test true}, dispose! {:protocol-inline nil, :meta {:line 189, :column 4, :end-line 189, :end-column 12, :protocol reagent.ratom/IDisposable, :doc nil, :arglists (quote ([this])), :file nil}, :protocol reagent.ratom/IDisposable, :name reagent.ratom/dispose!, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 188, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, -update-watching {:protocol-inline nil, :meta {:line 195, :column 4, :end-line 195, :end-column 20, :protocol reagent.ratom/IComputedImpl, :doc nil, :arglists (quote ([this derefed])), :file nil}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-update-watching, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 20, :method-params ([this derefed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag any}), :line 194, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this derefed])), :doc nil, :test true}, run {:protocol-inline nil, :meta {:line 192, :column 4, :end-line 192, :end-column 7, :protocol reagent.ratom/IRunnable, :doc nil, :arglists (quote ([this])), :file nil}, :protocol reagent.ratom/IRunnable, :name reagent.ratom/run, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 7, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 191, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, IDisposable {:meta {:line 188, :column 14, :end-line 188, :end-column 25, :doc nil, :protocol-symbol true, :protocol-info {:methods {dispose! [[this]]}}, :file nil}, :protocol-symbol true, :name reagent.ratom/IDisposable, :file "static/cljs/reagent/ratom.cljs", :end-column 25, :column 1, :line 188, :protocol-info {:methods {dispose! [[this]]}}, :info nil, :end-line 188, :impls #{reagent.ratom/Reaction}, :doc nil, :test true}, captured {:protocol-inline nil, :meta {:line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([obj])), :file nil}, :name reagent.ratom/captured, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 15, :method-params ([obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([obj])), :test true}, make-reaction {:protocol-inline nil, :meta {:line 318, :column 7, :end-line 318, :end-column 20, :arglists (quote ([f & {:keys [auto-run on-set on-dispose derefed]}])), :file nil}, :name reagent.ratom/make-reaction, :variadic true, :file "static/cljs/reagent/ratom.cljs", :end-column 20, :method-params ([f p__19211]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic true, :tag reagent.ratom/Reaction}), :line 318, :end-line 318, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f & {:keys [auto-run on-set on-dispose derefed]}])), :test true}, Reaction {:num-fields 9, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash reagent.ratom/IComputedImpl cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom reagent.ratom/IRunnable reagent.ratom/IDisposable cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Reaction, :file "static/cljs/reagent/ratom.cljs", :end-column 18, :type true, :column 10, :line 199, :record false, :end-line 199, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, RCursor {:num-fields 3, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IDeref cljs.core/IPrintWithWriter reagent.ratom/Object}, :name reagent.ratom/RCursor, :file "static/cljs/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 103, :record false, :end-line 103, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, -handle-change {:protocol-inline nil, :meta {:line 196, :column 4, :end-line 196, :end-column 18, :protocol reagent.ratom/IComputedImpl, :doc nil, :arglists (quote ([k sender oldval newval])), :file nil}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-handle-change, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 18, :method-params ([k sender oldval newval]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 4, :variadic false, :tag any}), :line 194, :end-line 196, :max-fixed-arity 4, :fn-var true, :arglists (quote ([k sender oldval newval])), :doc nil, :test true}, debug {:name reagent.ratom/debug, :line 8, :column 1, :end-line 8, :end-column 15, :test true, :meta {:line 8, :column 10, :end-line 8, :end-column 15, :file nil}, :file "static/cljs/reagent/ratom.cljs"}, -running {:name reagent.ratom/-running, :line 10, :column 1, :end-line 10, :end-column 18, :test true, :meta {:line 10, :column 10, :end-line 10, :end-column 18, :file nil}, :file "static/cljs/reagent/ratom.cljs"}, cursor {:protocol-inline nil, :meta {:line 165, :column 7, :end-line 165, :end-column 13, :arglists (quote ([src path])), :file nil}, :name reagent.ratom/cursor, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 13, :method-params ([src path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 2, :variadic false, :tag reagent.ratom/RCursor}), :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([src path])), :test true}, Wrapper {:num-fields 4, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/Wrapper, :file "static/cljs/reagent/ratom.cljs", :end-column 17, :type true, :column 10, :line 334, :record false, :end-line 334, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}}, running {:protocol-inline nil, :meta {:line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([])), :file nil}, :name reagent.ratom/running, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 0, :variadic false, :tag any}), :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, IRunnable {:meta {:line 191, :column 14, :end-line 191, :end-column 23, :doc nil, :protocol-symbol true, :protocol-info {:methods {run [[this]]}}, :file nil}, :protocol-symbol true, :name reagent.ratom/IRunnable, :file "static/cljs/reagent/ratom.cljs", :end-column 23, :column 1, :line 191, :protocol-info {:methods {run [[this]]}}, :info nil, :end-line 191, :impls #{reagent.ratom/Reaction}, :doc nil, :test true}, -peek-at {:protocol-inline nil, :meta {:line 197, :column 4, :end-line 197, :end-column 12, :protocol reagent.ratom/IComputedImpl, :doc nil, :arglists (quote ([this])), :file nil}, :protocol reagent.ratom/IComputedImpl, :name reagent.ratom/-peek-at, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:max-fixed-arity 1, :variadic false, :tag any}), :line 194, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil, :test true}, *ratom-context* {:meta {:line 6, :column 20, :end-line 6, :end-column 35, :dynamic true, :declared true, :file nil}, :name reagent.ratom/*ratom-context*, :file "static/cljs/reagent/ratom.cljs", :end-column 35, :column 1, :dynamic true, :line 6, :declared true, :end-line 6, :test true}, ->Wrapper {:protocol-inline nil, :meta {:line 334, :column 10, :end-line 334, :end-column 17, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([state callback changed watches])), :file nil}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->Wrapper, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 17, :method-params ([state callback changed watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 4, :variadic false, :tag reagent.ratom/Wrapper}), :line 334, :end-line 334, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state callback changed watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IReset cljs.core/ISwap cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}, ->RAtom {:protocol-inline nil, :meta {:line 37, :column 10, :end-line 37, :end-column 15, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :factory :positional, :arglists (quote ([state meta validator watches])), :file nil}, :protocols #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap reagent.ratom/IReactiveAtom cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :name reagent.ratom/->RAtom, :variadic false, :file "static/cljs/reagent/ratom.cljs", :end-column 15, :method-params ([state meta validator watches]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :factory :positional, :methods ({:max-fixed-arity 4, :variadic false, :tag reagent.ratom/RAtom}), :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([state meta validator watches])), :skip-protocol-flag #{cljs.core/IWatchable cljs.core/IAtom cljs.core/IEquiv cljs.core/IHash cljs.core/IReset cljs.core/ISwap cljs.core/IMeta cljs.core/IDeref cljs.core/IPrintWithWriter}, :test true}}, :require-macros {reagent.debug reagent.debug}, :cljs.analyzer/constants {:seen #{:on-set :meta :derefed :validator :auto-run :on-dispose}, :order [:meta :validator :on-set :auto-run :on-dispose :derefed]}, :doc nil}